{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","clases","className","children","ExpensesFilter","value","selected","onChange","event","onYearChange","target","ExpenseDate","day","date","toLocaleString","month","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFilledHight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","forEach","expenseMonth","getMonth","Expenses","useState","selectedYear","setSelectedYear","filteredYear","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","required","type","min","step","onClick","onCloseForm","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddHandler","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.69c19ad7.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const clases = \"card \" + props.className;\r\n  return <div className={clases}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const yearChangeHandler = (event) => {\r\n    props.onYearChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={yearChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h1 className=\"expenses-list__fallback\">No Expenses Found.</h1>;\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFilledHight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFilledHight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFilledHight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointsValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          label={dataPoint.label}\r\n          maxValue={totalMaximum}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  props.expenses.forEach((expense) => {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Chart dataPoints={chartDataPoints} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nimport \"./Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Expenses(props) {\r\n  const [selectedYear, setSelectedYear] = useState(\"2020\");\r\n\r\n  const selectedYearHandler = (year) => {\r\n    setSelectedYear(year);\r\n  };\r\n\r\n  const filteredYear = props.items.filter(\r\n    (expense) => expense.date.getFullYear().toString() === selectedYear\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={selectedYear}\r\n          onYearChange={selectedYearHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredYear} />\r\n        <ExpensesList items={filteredYear} />\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              required\r\n              type={\"text\"}\r\n              value={enteredTitle}\r\n              onChange={titleChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              required\r\n              type={\"number\"}\r\n              min={\"0.01\"}\r\n              step={\"0.01\"}\r\n              value={enteredAmount}\r\n              onChange={amountChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              required\r\n              type={\"date\"}\r\n              min={\"2019-01-01\"}\r\n              max={\"2022-12-31\"}\r\n              value={enteredDate}\r\n              onChange={dateChangeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"new-expense__actions\"\r\n            onClick={props.onCloseForm}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\" className=\"new-expense__actions\">\r\n            Add Expense\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddHandler(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const closeEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCloseForm={closeEditingHandler}\r\n        />\r\n      )}\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler} className=\"new-expense__actions\">\r\n          Add New Expense\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expenseData) => {\n    setExpenses((prevExpenses) => [expenseData, ...prevExpenses]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddHandler={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}