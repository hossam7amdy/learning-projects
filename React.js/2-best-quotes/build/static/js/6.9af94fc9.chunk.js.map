{"version":3,"sources":["utils/axios-utils.js","hooks/use-http.js","components/UI/Card.module.css","components/quotes/QuoteForm.module.css","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["client","axios","create","baseURL","timeout","useHttp","url","useState","data","setData","error","setError","isLoading","setIsLoading","request","useCallback","config","useEffect","module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Card","props","className","classes","card","children","QuoteForm","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","enteredText","trim","onAddQuote","author","text","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","sendQuote","quoteData","method","then"],"mappings":"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","file":"static/js/6.9af94fc9.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const client = axios.create({\r\n  baseURL: \"http://localhost:4000/\",\r\n  timeout: 1000,\r\n});\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { client } from \"../utils/axios-utils\";\r\n\r\nconst useHttp = (url) => {\r\n  const [data, setData] = useState();\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const request = useCallback(async (config) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await client(config);\r\n      setData(data);\r\n      return data;\r\n    } catch (err) {\r\n      setError(\"something went wrong\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    request(url);\r\n  }, [url, request]);\r\n\r\n  return {\r\n    data,\r\n    error,\r\n    isLoading,\r\n    request,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1EndV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3kqSG\",\"loading\":\"QuoteForm_loading__3ZNZV\",\"control\":\"QuoteForm_control__vw6TO\",\"actions\":\"QuoteForm_actions__1m-0U\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Prompt } from \"react-router-dom\";\nimport { useRef, useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./QuoteForm.module.css\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n    if (enteredAuthor.trim().length === 0 || enteredText.trim().length === 0) {\n      return; // TODO: send feedback to the user\n    }\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  return (\n    <Card>\n      <Prompt\n        when={isEntering}\n        message={\n          \"Are you sure you want to leave. All your entered data will be lost\"\n        }\n      />\n      <form\n        onFocus={formFocusHandler}\n        className={classes.form}\n        onSubmit={submitFormHandler}\n      >\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor=\"author\">Author</label>\n          <input type=\"text\" id=\"author\" ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"text\">Text</label>\n          <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEnteringHandler} className=\"btn\">\n            Add Quote\n          </button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router-dom\";\r\n\r\nimport useHttp from \"../hooks/use-http\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst NewQuote = () => {\r\n  const history = useHistory();\r\n  const { isLoading, request: sendQuote } = useHttp(\"quotes\");\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    const config = {\r\n      url: \"quotes\",\r\n      method: \"post\",\r\n      data: { ...quoteData },\r\n    };\r\n\r\n    sendQuote(config).then(() => history.push(\"/quotes\"));\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <QuoteForm onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}