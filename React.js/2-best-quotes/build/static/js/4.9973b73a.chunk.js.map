{"version":3,"sources":["utils/axios-utils.js","hooks/use-http.js","components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/Comments.js","pages/QuoteDetail.js"],"names":["client","axios","create","baseURL","timeout","useHttp","url","useState","data","setData","error","setError","isLoading","setIsLoading","request","useCallback","config","useEffect","NoQuotesFound","className","classes","noquotes","to","module","exports","HighlightedQuote","props","quote","text","author","NewCommentForm","quoteId","onAddComment","commentTextRef","useRef","sendComment","submitFormHandler","event","preventDefault","enteredText","current","value","trim","length","method","then","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","Comments","comments","isAddingComment","setIsAddingComment","loadedComments","map","comment","onClick","finally","QuoteDetail","match","useRouteMatch","useParams","loadedQuote","path","exact"],"mappings":"sKAEaA,E,MAASC,EAAMC,OAAO,CACjCC,QAAS,yBACTC,QAAS,MC8BIC,IA9BC,SAACC,GACf,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAUC,sBAAW,iDAAC,WAAOC,GAAP,0FAC1BH,GAAa,GADa,kBAGDb,EAAOgB,GAHN,uBAGhBR,EAHgB,EAGhBA,KACRC,EAAQD,GAJgB,kBAKjBA,GALiB,kCAOxBG,EAAS,wBAPe,yBASxBE,GAAa,GATW,6EAAD,sDAWxB,IAMH,OAJAI,qBAAU,WACRH,EAAQR,EACT,GAAE,CAACA,EAAKQ,IAEF,CACLN,OACAE,QACAE,YACAE,UAEH,C,kCChCD,mCAceI,IAXO,WACpB,OACE,sBAAKC,UAAWC,IAAQC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMC,GAAI,aAAcH,UAAU,MAAlC,2BAKL,C,qBCXDI,EAAOC,QAAU,CAAC,SAAW,gC,qBCA7BD,EAAOC,QAAU,CAAC,MAAQ,gC,qBCA1BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,gC,qBCApJD,EAAOC,QAAU,CAAC,KAAO,0B,qBCAzBD,EAAOC,QAAU,CAAC,SAAW,2B,0FCUdC,EATU,SAACC,GACxB,OACE,yBAAQP,UAAWC,IAAQO,MAA3B,UACE,4BAAID,EAAME,OACV,qCAAaF,EAAMG,WAGxB,E,iDCyCcC,EA3CQ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAC3BC,EAAiBC,mBACvB,EAA4C7B,cAApCO,EAAR,EAAQA,UAAoBuB,EAA5B,EAAmBrB,QAEbsB,EAAoB,SAACC,GACzBA,EAAMC,iBACN,IAAMC,EAAcN,EAAeO,QAAQC,MAET,IAA9BF,EAAYG,OAAOC,QAWvBR,EAPe,CACb7B,IAAI,WACJsC,OAAQ,OACRpC,KAAM,CAAEuB,UAASH,KAAMW,KAILM,MAAK,WACvBZ,EAAeO,QAAQC,MAAQ,GAC/BT,GACD,GACF,EAED,OACE,uBAAMb,UAAWC,IAAQ0B,KAAMC,SAAUX,EAAzC,UACGxB,GACC,qBAAKO,UAAU,WAAf,SACE,cAAC6B,EAAA,EAAD,MAGJ,sBAAK7B,UAAWC,IAAQ6B,QAASF,SAAUX,EAA3C,UACE,uBAAOc,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAKpB,OAEvC,qBAAKd,UAAWC,IAAQkC,QAAxB,SACE,wBAAQnC,UAAU,MAAlB,6BAIP,E,iBCtCcoC,EARK,SAAC7B,GACnB,OACE,oBAAIP,UAAWC,IAAQoC,KAAvB,SACE,4BAAI9B,EAAME,QAGf,E,iBCmEc6B,EAnEE,SAAC,GAAiB,IAmB7BC,EAnBc3B,EAAc,EAAdA,QAClB,EAA8CxB,oBAAS,GAAvD,mBAAOoD,EAAP,KAAwBC,EAAxB,KACA,EAKIvD,YAAQ,oBAAD,OAAqB0B,IAJ9BrB,EADF,EACEA,MACAE,EAFF,EAEEA,UACMiD,EAHR,EAGErD,KACAM,EAJF,EAIEA,QA6CF,OA9BIF,IACF8C,EACE,qBAAKvC,UAAU,WAAf,SACE,cAAC6B,EAAA,EAAD,OAKFtC,IACFgD,EACE,qBAAKvC,UAAU,WAAf,SACE,4BAAIT,GAAS,gEAKdE,GAAwC,KAAb,OAAdiD,QAAc,IAAdA,OAAA,EAAAA,EAAgBlB,UAChCe,EACE,qBAAKvC,UAAU,WAAf,SACE,8DAKDP,IAA2B,OAAdiD,QAAc,IAAdA,OAAA,EAAAA,EAAgBlB,QAAS,IACzCe,EAAQ,OAAGG,QAAH,IAAGA,OAAH,EAAGA,EAAgBC,KAAI,SAACC,GAAD,OAC7B,cAAC,EAAD,CAA8BnC,KAAMmC,EAAQnC,MAA1BmC,EAAQZ,GADG,KAM/B,0BAAShC,UAAWC,IAAQsC,SAA5B,UACE,gDACEC,GACA,wBAAQxC,UAAU,MAAM6C,QA9CC,WAC7BJ,GAAmB,EACpB,EA4CK,2BAIDD,GACC,cAAC,EAAD,CAAgB5B,QAASA,EAASC,aA/Cd,WACxBlB,EAAQ,oBAAD,OAAqBiB,IAAWkC,SAAQ,kBAC7CL,GAAmB,EAD0B,GAGhD,IA6CIF,IAGN,EC1BcQ,UAtCK,WAClB,IAAMC,EAAQC,cACNrC,EAAYsC,cAAZtC,QACR,EAAgD1B,YAAQ,UAAD,OAAW0B,IAA1DnB,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,MAAa4D,EAAhC,EAA0B9D,KAE1B,OAAII,EACK,cAACoC,EAAA,EAAD,IAGLtC,EAEA,mBAAGS,UAAU,mBAAb,SACGT,GAAS,6DAKX4D,EAKH,eAAC,WAAD,WACE,cAAC,EAAD,CAAkBzC,OAAQyC,EAAYzC,OAAQD,KAAM0C,EAAY1C,OAChE,cAAC,IAAD,CAAO2C,KAAI,UAAKJ,EAAMI,MAAQC,OAAK,EAAnC,SACE,qBAAKrD,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYG,GAAE,UAAK6C,EAAM7D,IAAX,aAA9B,+BAKJ,cAAC,IAAD,CAAOiE,KAAI,UAAKJ,EAAM7D,IAAX,aAAX,SACE,cAAC,EAAD,CAAUyB,QAASA,SAdhB,cAAC,IAAD,GAkBV,C","file":"static/js/4.9973b73a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const client = axios.create({\r\n  baseURL: \"http://localhost:4000/\",\r\n  timeout: 1000,\r\n});\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { client } from \"../utils/axios-utils\";\r\n\r\nconst useHttp = (url) => {\r\n  const [data, setData] = useState();\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const request = useCallback(async (config) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await client(config);\r\n      setData(data);\r\n      return data;\r\n    } catch (err) {\r\n      setError(\"something went wrong\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    request(url);\r\n  }, [url, request]);\r\n\r\n  return {\r\n    data,\r\n    error,\r\n    isLoading,\r\n    request,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to={\"/new-quote\"} className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1LoaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2Bvmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__8I_NN\",\"loading\":\"NewCommentForm_loading__1YJAw\",\"control\":\"NewCommentForm_control__3ey4-\",\"actions\":\"NewCommentForm_actions__12I1V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3o3yO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__AVsPs\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef } from \"react\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = ({ quoteId, onAddComment }) => {\n  const commentTextRef = useRef();\n  const { isLoading, request: sendComment } = useHttp();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n\n    if (enteredText.trim().length === 0) {\n      return; // TODO: send feedback to the user\n    }\n\n    const config = {\n      url: `comments`,\n      method: \"post\",\n      data: { quoteId, text: enteredText },\n    };\n\n    // send comment to server\n    sendComment(config).then(() => {\n      commentTextRef.current.value = \"\"; // FIXME: bad practice\n      onAddComment();\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {isLoading && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import { useState } from \"react\";\n\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentItem from \"./CommentItem\";\nimport useHttp from \"../../hooks/use-http\";\nimport classes from \"./Comments.module.css\";\n\nconst Comments = ({ quoteId }) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {\n    error,\n    isLoading,\n    data: loadedComments,\n    request,\n  } = useHttp(`comments?quoteId=${quoteId}`);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = () => {\n    request(`comments?quoteId=${quoteId}`).finally(() =>\n      setIsAddingComment(false)\n    );\n  };\n\n  let comments;\n\n  if (isLoading) {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    comments = (\n      <div className=\"centered\">\n        <p>{error || \"something went wrongðŸ’¥ðŸ’¥ðŸ’¥\"}</p>\n      </div>\n    );\n  }\n\n  if (!isLoading && loadedComments?.length === 0) {\n    comments = (\n      <div className=\"centered\">\n        <p>No comments at the moment</p>\n      </div>\n    );\n  }\n\n  if (!isLoading && loadedComments?.length > 0) {\n    comments = loadedComments?.map((comment) => (\n      <CommentItem key={comment.id} text={comment.text} />\n    ));\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm quoteId={quoteId} onAddComment={addCommentHandler} />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuoteFound from \"../components/quotes/NoQuotesFound\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport useHttp from \"../hooks/use-http\";\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const { quoteId } = useParams();\r\n  const { isLoading, error, data: loadedQuote } = useHttp(`quotes/${quoteId}`);\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <p className=\"centered focused\">\r\n        {error || \"something went wrongðŸ’¥ðŸ’¥ðŸ’¥\"}\r\n      </p>\r\n    );\r\n  }\r\n\r\n  if (!loadedQuote) {\r\n    return <NoQuoteFound />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote author={loadedQuote.author} text={loadedQuote.text} />\r\n      <Route path={`${match.path}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.url}/comments`}>\r\n        <Comments quoteId={quoteId} />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}